// Copyright 2019 The SEED Authors
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package seed_rl;

/*
We don't use these dependencies directly, as the .proto files aren't available
in the open source TensorFlow packages. Instead we use "bytes" and encode/decode
the protobufs when receiving/sending a message.

import "tensorflow/core/framework/tensor.proto";
import "tensorflow/core/lib/core/error_codes.proto";
import "tensorflow/core/protobuf/struct.proto";
*/

service TensorService {
  // Initializes the service.
  rpc Init(InitRequest) returns (InitResponse) {}

  // Makes a call using streams for increased throughput.
  rpc Call(stream CallRequest) returns (stream CallResponse) {}
}

message InitRequest {}

message MethodOutputSignature {
  string name = 1;
  bytes /* tensorflow.StructuredValue */ output_specs = 2;
}

message InitResponse {
  // Output specs (nest of tf.TypeSpec) of the bound methods.
  repeated MethodOutputSignature method_output_signature = 1;
}

message CallRequest {
  string function = 1;
  repeated bytes /* tensorflow.TensorProto */ tensor = 2;
}

message CallResponse {
  repeated bytes /* tensorflow.TensorProto */ tensor = 1;
  int32 /* tensorflow.error.Code */ status_code = 2;
  string status_error_message = 3;
}
